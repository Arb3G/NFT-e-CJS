// Firebase Functions + Stellar NFT Minting Discord Bot Boilerplate

// File: functions/src/index.ts
import * as functions from "firebase-functions";
import { handleDiscordCommand } from "./discord";

export const discordWebhook = functions.https.onRequest(handleDiscordCommand);

// File: functions/src/discord.ts
import { Request, Response } from "express";
import { mintNft } from "./mint";

export const handleDiscordCommand = async (req: Request, res: Response) => {
  const { user_id, message } = req.body;

  if (message === "!mint") {
    try {
      const result = await mintNft(user_id);
      res.json({ content: `NFT minted: ${result.link}` });
    } catch (e) {
      console.error(e);
      res.status(500).json({ content: "Minting failed." });
    }
  } else {
    res.json({ content: "Unknown command." });
  }
};

// File: functions/src/mint.ts
import * as StellarSdk from "stellar-sdk";
import { v4 as uuidv4 } from "uuid";

export const mintNft = async (discordUserId: string) => {
  const server = new StellarSdk.Server("https://horizon.stellar.org");
  const issuingKeys = StellarSdk.Keypair.fromSecret(process.env.ISSUER_SECRET!);
  const receivingPublicKey = process.env.RECEIVER_PUBLIC_KEY!; // or derive from user

  const assetCode = `CJSNFT-${uuidv4().slice(0, 6)}`;
  const nftAsset = new StellarSdk.Asset(assetCode, issuingKeys.publicKey());

  const account = await server.loadAccount(issuingKeys.publicKey());
  const fee = await server.fetchBaseFee();

  const transaction = new StellarSdk.TransactionBuilder(account, {
    fee,
    networkPassphrase: StellarSdk.Networks.PUBLIC
  })
    .addOperation(StellarSdk.Operation.payment({
      destination: receivingPublicKey,
      asset: nftAsset,
      amount: "0.0000001" // simulates NFT uniqueness
    }))
    .setTimeout(30)
    .build();

  transaction.sign(issuingKeys);
  await server.submitTransaction(transaction);

  return {
    link: `https://stellar.expert/explorer/public/asset/${assetCode}-${issuingKeys.publicKey()}`
  };
};

// File: functions/package.json
{
  "name": "functions",
  "main": "lib/index.js",
  "scripts": {
    "build": "tsc",
    "start": "firebase emulators:start --only functions"
  },
  "dependencies": {
    "axios": "^1.4.0",
    "dotenv": "^16.3.1",
    "express": "^4.18.2",
    "stellar-sdk": "^10.5.0",
    "uuid": "^9.0.0"
  },
  "devDependencies": {
    "typescript": "^5.0.0"
  }
}

// File: .env (DO NOT COMMIT THIS)
ISSUER_SECRET=YOUR_STELLAR_ISSUER_SECRET_KEY
RECEIVER_PUBLIC_KEY=RECEIVER_PUBLIC_KEY

// File: firebase.json
{
  "functions": {
    "source": "functions"
  }
}

// File: .firebaserc
{
  "projects": {
    "default": "your-firebase-project-id"
  }
}
